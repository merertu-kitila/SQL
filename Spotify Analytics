# In this project I...
# (1) downloaded Spotify data from Kaggle
# (2) created a table to insert the Spotify data into
# (3) performed analytics on the data using SQL


# Creating table
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

# I then inserted the Spotify data .csv into the table

# Next I explored the data using the following SQL queries




## Sort the top 50 songs on Spotify by popularity rating

SELECT * FROM Spotifydata order by popularity desc;



## What were the top 3 most popular songs in the Spotify Top 50?

SELECT track_name FROM BIT_DB.spotifydata ORDER BY popularity desc limit 3;



## Which artists appeared more than once in the Spotify Top 50?

SELECT artist_name, COUNT(*) as number_of_songs
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING COUNT(*) >1;



## 
SELECT track_name, artist_name, (duration_ms) / 1000 as duration
FROM BIT_DB.spotifydata
WHERE id <21;

SELECT avg(popularity) as average_popularity_of_TOP50
FROM BIT_DB.Spotifydata;


